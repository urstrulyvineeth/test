Absolutely! Here's a **clean, beginner-friendly, step-by-step guide** to create a complete **Agent Flow in Amazon Bedrock**, from scratch, specifically for your `AutoSecureX` agent.

---

# ✅ Step-by-Step Guide: Creating a Flow in Amazon Bedrock for AutoSecureX

---

## 🎯 Goal

Create a **Flow** for the `AutoSecureX` agent to:

1. Accept a repo/upload
2. Scan vulnerabilities (via action)
3. Ask upgrade versions
4. Fetch secure dependencies
5. Refactor code using Claude
6. Ask user to raise PR
7. Create PR if approved
8. Show result message

---

## 🧱 Prerequisites

* Your **AutoSecureX agent** is already created in Bedrock
* You have API endpoints (or mock functions) ready for scanning, version suggestion, and PR creation
* You’ve added a **Knowledge Base** (optional)

---

## 🛠️ Step-by-Step: Create the Flow

### 🔹 1. Go to Amazon Bedrock Console

1. Open the AWS Console
2. Navigate to **Amazon Bedrock → Agents**
3. Click on your agent (e.g., `AutoSecureX`)

---

### 🔹 2. Enable & Create a Flow

1. Click **Flows (Preview)** in the sidebar
2. Click **Create flow**

   * Flow name: `AutoSecureXFlow`
   * Description: `Scans Java project, suggests upgrades, refactors code, and creates PR`
3. A blank flow editor opens with a default **Prompt block**.

---

## 🧩 Add Blocks to the Flow

### 🔷 Block 1: Ask for Project (Prompt)

* **Message**:

  ```
  Please provide your GitHub repository URL or upload a zipped Java project.
  ```
* **Output Parameter**:
  `repo_url`

✅ Click **Add** → `Prompt`

---

### 🔷 Block 2: Scan Project (Action)

* **Action Name**: `ScanJavaProjectAction`
* **Input**: `repo_url`
* **Output**: `scan_summary`, `code_sample`

🧠 This action should:

* Clone the repo
* Run `snyk test`
* Return vulnerability summary & sample code

✅ Click **Add** → `Action`

* Set action name
* Fill in input/output parameters

---

### 🔷 Block 3: Ask for Upgrade Targets (Prompt)

* **Message**:

  ```
  What Java and Spring Boot versions do you want to upgrade to?
  Example: Java 17, Spring Boot 3.2.5
  ```
* **Output**: `java_version`, `spring_version`

✅ Click **Add** → `Prompt`

---

### 🔷 Block 4: Fetch Dependency Versions (Action)

* **Action Name**: `FetchSecureDependencies`
* **Input**: `java_version`, `spring_version`
* **Output**: `dependency_versions`

✅ Click **Add** → `Action`

---

### 🔷 Block 5: Refactor Code with Claude (LLM Prompt)

* **Message / Prompt**:

  ```
  Refactor the following Java code to:
  - Upgrade to Java {java_version} and Spring Boot {spring_version}
  - Replace javax.* with jakarta.*
  - Migrate from Springfox to springdoc
  - Use these secure versions: {dependency_versions}
  Keep the functionality same.

  CODE:
  {code_sample}
  ```
* **Input**: `java_version`, `spring_version`, `dependency_versions`, `code_sample`
* **Output**: `refactored_code`

✅ Click **Add** → `Prompt with Claude`

---

### 🔷 Block 6: Ask to Raise PR (Prompt)

* **Message**:

  ```
  Here is your upgraded code. Do you want me to raise a Pull Request?
  ```
* **Output**: `pr_approval`

✅ Click **Add** → `Prompt`

---

### 🔷 Block 7: Conditional Block

* **Condition**:
  `pr_approval == "yes"`

✅ Click **Add** → `Condition`

➡️ Inside this condition, add:

### 🔷 Block 7a: Create PR (Action)

* **Action Name**: `RaisePullRequestAction`
* **Input**: `refactored_code`, `repo_url`, `github_token`
* **Output**: `pr_link`

✅ Click **Add** → `Action` (inside conditional)

---

### 🔷 Block 8: Final Message (Prompt)

* **Message**:

  ```txt
  Your project has been secured.

  {% if pr_link %}
  ✅ Pull Request created: {pr_link}
  {% else %}
  Please create the PR manually.
  {% endif %}

  Thanks for using AutoSecureX!
  ```
* **Input**: `pr_link` (optional)

✅ Click **Add** → `Prompt`

---

## 🔗 Integrate Flow with the Agent

1. Go to **Agent > Instructions**
2. Add system prompt:

   ```txt
   You are AutoSecureX. Your job is to secure Java projects by scanning, upgrading, and applying best practices. You use secure dependency versions and help with refactoring and PR creation.
   ```
3. Scroll to **Flows section**
4. Select `AutoSecureXFlow` as the **default flow**

✅ Click **Publish Agent**

---

## ✅ Now You're Ready

🎉 Agent will:

* Ask for repo/upload
* Scan and summarize vulnerabilities
* Ask for upgrade targets
* Fetch secure versions
* Refactor code using Claude
* Raise PR (optional)
* Return results

---

Would you like:

* ✨ A JSON of this flow to import?
* ⚙️ Backend code for `ScanJavaProjectAction` or `RaisePullRequestAction`?
* 🎨 React UI to call this agent?

Just say the word. You're a few steps from winning this hackathon. 💪
