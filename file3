import boto3
import zipfile
import os
import shutil

# --- CONFIGURATION ---
BUCKET_NAME = 'autosecure-input'
KEY = 'AgentAI.zip'
LOCAL_ZIP = '/tmp/AgentAI.zip'
EXTRACTED_DIR = '/tmp/AgentAI'

# --- STEP 1: DOWNLOAD ZIP FROM S3 ---
s3 = boto3.client('s3')
s3.download_file(BUCKET_NAME, KEY, LOCAL_ZIP)

# --- STEP 2: EXTRACT THE PROJECT ---
with zipfile.ZipFile(LOCAL_ZIP, 'r') as zip_ref:
    zip_ref.extractall(EXTRACTED_DIR)

# --- STEP 3: SIMULATE VULNERABILITY SCAN ---
vulnerabilities = []
for root, dirs, files in os.walk(EXTRACTED_DIR):
    for file in files:
        if file.endswith("pom.xml") or file.endswith(".gradle"):
            vulnerabilities.append({
                "file": os.path.join(root, file),
                "issue": "Outdated Spring Boot version",
                "recommendation": "Upgrade spring-boot-starter-parent to 3.2.4"
            })

# --- STEP 4: AUTO-FIX SAMPLE VULNERABILITIES ---
for v in vulnerabilities:
    path = v["file"]
    with open(path, 'r') as f:
        content = f.read()
    content = content.replace("2.5.0", "3.2.4")  # Example version upgrade
    with open(path, 'w') as f:
        f.write(content)

# --- STEP 5: ZIP THE FIXED PROJECT AND UPLOAD TO S3 ---
fixed_zip_path = '/tmp/AgentAI-fixed.zip'
shutil.make_archive('/tmp/AgentAI-fixed', 'zip', EXTRACTED_DIR)
s3.upload_file(fixed_zip_path, BUCKET_NAME, 'AgentAI-fixed.zip')

# --- STEP 6: RETURN A SUMMARY OUTPUT (Used in Flow Output) ---
output = {
    "status": "fixed",
    "fixed_file_s3": f"s3://{BUCKET_NAME}/AgentAI-fixed.zip",
    "vulnerabilities_found": vulnerabilities
}
print(output)
